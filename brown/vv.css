html,
    body {
      position: relative;
      height: 100%;
    }

    body {
      background: #eee;
      font-family: Helvetica Neue, Helvetica, Arial, sans-serif;
      font-size: 14px;
      color: #000;
      margin: 0;
      padding: 0;
    }

    swiper-container {
      width: 100%;
      height: 100%;
    }

    swiper-slide {
      text-align: center;
      font-size: 18px;
      background: #fff;
      display: flex;
      justify-content: center;
      align-items: center;
    }

    swiper-slide img {
        display: block;
      width: 100%;
      height: 100%;
      object-fit: cover;
    }

    .swiper-v {
      background: #eee;
    }


    /*هنا اول استايل */
    .card-title {
  color: #262626;
  font-size: 1.5em;
  line-height: normal;
  font-weight: 700;
  margin-bottom: 0.5em;
}

.small-desc {
  font-size: 3em;
  font-weight: 400;
  line-height: 1.90em;
  color: #452c2c;
}

.small-desc {
  font-size: 1em;
}

.go-corner {
  display: flex;
  align-items: center;
  justify-content: center;
  position: absolute;
  width: 2em;
  height: 2em;
  overflow: hidden;
  top: 0;
  right: 0;
  background: linear-gradient(135deg, #6293c8, #6293c8,#384c6c);
  border-radius: 0 1px 0 32px;
}

.go-arrow {
  margin-top: -4px;
  margin-right: -4px;
  color: white;
  font-family: courier, sans;
}

.card {
  display: block;
  position: relative;
  max-width: 800px;
  max-height: 5000px;
  background-color: #f2f8fa;
  border-radius: 10px;
  padding: 3em 1.2em;
  margin: 30px;
  text-decoration: none;
  z-index: 0;
  overflow: hidden;
  background: linear-gradient(to bottom, rgb(149, 192, 192),rgba(41, 41, 95, .5));/*تعاليييييييييييييييييييييييييييييي*/
  font-family: Arial, Helvetica, sans-serif;
}

.card:before {
  content: '';
  position: absolute;
  z-index: -1;
  top: -16px;
  right: -16px;
  background: linear-gradient(135deg, #364a60, #384c6c);
  height: 32px; 
  width: 32px;
  border-radius: 100px;
  transform: scale(1);
  transform-origin: 50% 50%;
  transition: transform 0.35s ease-out;
}

.card:hover:before {
  transform: scale(60);
}

.card:hover .small-desc {
  transition: all 0.5s ease-out;
  color: rgb(255, 255, 255,0.8);
}

.card:hover .card-title {
  transition: all 10.5s ease-out;
  color: rgb(255, 255, 255,0.8);
}
h1{
    font-size: 3em;
  font-weight: 10px;
  line-height:0.10em;
  color: rgb(32, 22, 22);
  position: fixed;
  top: 100px;
   right: 300px;
   left: 300px; 
   transform: translateY(-60%);
}


/* الصفحان الثانيه الى فوق بعض */








.ca {
  --cardbg: 245, 245, 245;
  --cardBase: 235, 16, 206;
  --cardText: 100, 100, 100;
  --cardTextBtn: 106, 16, 88;
  --cardsquares: 156, 113, 227;
  display: flex;
  flex-flow: column nowrap;
  place-items: center;
  text-align: center;
  border: 1px solid rgb(40, 124, 89);
  box-shadow: 0 0 3em rgba(41, 41, 95, 0.25),
  inset 0 -.25em 1px rgba(0,0,255 .125);
  border-radius: 4px;
  background: rgba(var(--cardbg), 1);
  position: relative;
  width: 270px;
  height: 360px;
  perspective: 1000px;
  z-index: 0;
  transition: all 1s ease-out;
 
  top: 150px;
  left: -250px;
}

.ca:hover {
  filter: grayscale(0%);
  scale: 1.025;
  box-shadow: 0 0 5em  rgba(41, 41, 95, 0.5);
}

.ca::after,
.ca::before {
  content: '';
  width: 200px;
  height: 50%;
  display: block;
  background-color: rgba(var(--cardsquares), .5);
  filter: blur(10px);
  position: absolute;
  transition: all 5s ease-out;
  opacity: .1;
  z-index: 0;
}

.ca:hover::after,
.ca:hover::before {
  opacity: .5;
  rotate: 60deg;
}

.ca:hover::after {
  translate: 100% 0;
}

.ca:hover::before {
  translate: -100% 0;
}

.ca.ca-ti {
  color: rgba(var(--cardText), .75);
  font-size: 1.1em;
  font-weight: 600;
  margin: .5em;
  position: relative;
  transition: all .3s ease-out;
  z-index: 100;
  text-shadow: 0px 0px 0px rgba(var(--cardText), .25);
}

.ca:hover h3 {
  color: rgba(var(--cardText), 1);
  text-shadow: 0px 8px 5px rgba(var(--cardText), .35);
}

.ca:hover span {
  filter: grayscale(0%);
}

/* Inner card */
.ca-in::after {
  left: -6rem;
  bottom: 0;
}

.ca-in::before {
  right: -6rem;
  top: 1rem;
}

/* Avatar container */
.ca-in span {
  color: rgba(41, 41, 95, 1);
  display: flex;
  place-items: center;
  text-align: center;
  border-radius: 50%;
  overflow: hidden;
  background-color:  rgba(41, 41, 95, .5);
  height: 80px;
  width: 50%;
  box-shadow: inset 0px 2px 4px  rgba(41, 41, 95, .95),
  inset 0px 2px 40px rgba(var(--cardbg), .95);
  position: relative;
  transition: all .3s ease-out .1s;
  filter: grayscale(75%);
  z-index: 0;
}

.ca-in span:hover .avatar {
  scale: 1.5;
}

.avatar {
  transition: all .3s ease-out;
  position: relative;
}

/* Inner card container and UI */
.ca-in {
  --angle: 0deg;
  display: flex;
  flex-flow: column nowrap;
  place-items: center;
  padding: 1em;
  margin: 0 .75em;
  color: rgba(var(--cardText), 1);
  background-color: rgb(158, 187, 214);
  transition: all .5s ease-out;
  animation: animateBorder 10s linear infinite reverse;
  border: .15em solid;
  position: relative;
  z-index: 10;
  border-image: linear-gradient(var(--angle), rgba(var(--cardbg), 1),  rgba(41, 41, 95, .5), rgba(var(--cardbg), 1)) 1;
}

.ca-in p {
  color: rgba(var(--cardText), 1);
  line-height: 1.25em;
  display: -webkit-box;
  -webkit-box-orient: vertical;
  overflow: hidden;
  text-overflow: ellipsis;
  -webkit-line-clamp: 3;
  font-size: 1em;
  margin: 1em 0;
  transition: all .3s ease-out .3s;
}

.ca-in .btn {
  display: block;
  padding: 8px 16px;
  background-color:  rgba(41, 41, 95, .35);
  color: rgba(var(--cardTextBtn), .75);
  text-decoration: none;
  border-radius: 4px;
  font-size: .85em;
  transition: all 0.3s ease-in-out;
}

.ca-in.btn:hover {
  cursor: pointer;
  background-color: rgba(var(--cardsquares), .35);
}

.ca-in.btn:active {
  box-shadow: inset 0px -2px 3px  rgba(41, 41, 95, .25);
}

/* Card links container */
.ca-li {
  transition: all .3s linear;
  opacity: 0;
  display: flex;
  flex-flow: row wrap;
  gap: 1em;
  position: relative;
  top: -2rem;
  list-style: none;
  color: rgba(var(--cardText), 1);
  font-size: .75em
}

.ca-li a {
  transition: color .3s ease-out ;

  
}

.ca-li a:hover {
  color: rgba(1, 1, 26, 0.75);
}

/* Card chckbox active state */
.ca input[type="checkbox"] {
  visibility: hidden;
}

.ca:hover:has(#toggle:checked) .ca-ti {
  text-shadow: 0px 2px 5px rgba(var(--cardText), .35);
}

.ca:has(#toggle:checked) {
  border-radius: 10px;
  height: 295px;
}

.ca:has(#toggle:checked) .ca-in > *:not(.btn):not(span) {
  opacity: 0;
}

.ca:has(#toggle:checked) .ca-in {
  translate: 0 -20%;
  border-width: 1px;
  border: none;
  box-shadow: inset 0 0 5px rgba(41, 41, 95, .5),
  inset 0px 0px 2px rgba(41, 41, 95, .25),
  inset 0px 30px 40px rgba(41, 41, 95, .25);
  border-radius: 10px;
}

.ca:has(#toggle:checked) .ca-in span {
  translate: 0 75%;
}

.ca:has(#toggle:checked) .ca-in p {
  transition: all .1s ease-out;
}

.ca:has(#toggle:checked) .ca-li {
  opacity: 1;
  top: -2rem;
}

.ca #toggle {
  visibility: hidden;
}

@keyframes animateBorder {
  to {
    --angle: 360deg;
  }
}

@property --angle {
  syntax: '<angle>';
  initial-value: 0deg;
  inherits: false;
}






























/*الى في الوكالة  واسما~هم*/


.button {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  padding: 15px 100px;
  border: 0;
  position: relative;
  overflow: hidden;
  border-radius: 300rem;
  transition: all 0.02s;
  font-weight: bold;
  color: rgb(22, 18, 18);
  z-index: 0;
  box-shadow: 0 0px 7px -5px rgba(237, 235, 243, 0.5);
  left: 150px;
  top: -200px;
  font-size: 30px;
}

.button:hover {
  background: rgb(193, 228, 248);
  color: rgb(33, 0, 85);
}

.button:active {
  transform: scale(0.97);
}

.hoverEffect {
  position: absolute;
  bottom: 0;
  top: 0;
  left: 0;
  right: 0;
  display: flex;
  align-items: center;
  justify-content: center;
  z-index: 1;
}

.hoverEffect div {
  background: rgb(46, 134, 61);
  background: linear-gradient(90deg, rgb(177, 92, 35) 0%, rgb(175, 116, 48)45%, rgba(0,212,255,1) 100%);
  border-radius: 40rem;
  width: 40rem;
  height: 40rem;
  transition: 0.4s;
  filter: blur(20px);
  animation: effect infinite 4s linear;
  opacity: 0.5;
}

.button:hover .hoverEffect div {
  width: 8rem;
  height: 8rem;
}

@keyframes effect {

  0% {
    transform: rotate(0deg);
  }

  100% {
    transform: rotate(360deg);
  }
}

/*الصفحة الثانية نفس الكود زززززززززززززززززززززززززززززززززززززززززززززززززززززززززززززززززززززززززززززز*/
.da {
    --cardbg: 245, 245, 245;
    --cardBase: 235, 16, 206;
    --cardText: 100, 100, 100;
    --cardTextBtn: 106, 16, 88;
    --cardsquares: 156, 113, 227;
    display: flex;
    flex-flow: column nowrap;
    place-items: center;
    text-align: center;
    border: 1px solid rgb(40, 124, 89);
    box-shadow: 0 0 3em rgba(41, 41, 95, 0.25),
    inset 0 -.25em 1px rgba(0,0,255 .125);
    border-radius: 4px;
    background: rgba(var(--cardbg), 1);
    position: relative;
    width: 270px;
    height: 360px;
    perspective: 1000px;
    z-index: 0;
    transition: all 1s ease-out;
   
    top: 150px;
    left: -250px;
  }
  
  .da:hover {
    filter: grayscale(0%);
    scale: 1.025;
    box-shadow: 0 0 5em  rgba(41, 41, 95, 0.5);
  }
  
  .da::after,
  .da::before {
    content: '';
    width: 200px;
    height: 50%;
    display: block;
    background-color: rgba(var(--cardsquares), .5);
    filter: blur(10px);
    position: absolute;
    transition: all 5s ease-out;
    opacity: .1;
    z-index: 0;
  }
  
  .da:hover::after,
  .da:hover::before {
    opacity: .5;
    rotate: 60deg;
  }
  
  .da:hover::after {
    translate: 100% 0;
  }
  
  .da:hover::before {
    translate: -100% 0;
  }
  
  .da.da-ti {
    color: rgba(var(--cardText), .75);
    font-size: 1.1em;
    font-weight: 600;
    margin: .5em;
    position: relative;
    transition: all .3s ease-out;
    z-index: 100;
    text-shadow: 0px 0px 0px rgba(var(--cardText), .25);
  }
  
  .da:hover h3 {
    color: rgba(var(--cardText), 1);
    text-shadow: 0px 8px 5px rgba(var(--cardText), .35);
  }
  
  .da:hover span {
    filter: grayscale(0%);
  }
  
  /* Inner card */
  .da-in::after {
    left: -6rem;
    bottom: 0;
  }
  
  .da-in::before {
    right: -6rem;
    top: 1rem;
  }
  
  /* Avatar container */
  .da-in span {
    color: rgba(41, 41, 95, 1);
    display: flex;
    place-items: center;
    text-align: center;
    border-radius: 50%;
    overflow: hidden;
    background-color:  rgba(41, 41, 95, .5);
    height: 80px;
    width: 50%;
    box-shadow: inset 0px 2px 4px  rgba(41, 41, 95, .95),
    inset 0px 2px 40px rgba(var(--cardbg), .95);
    position: relative;
    transition: all .3s ease-out .1s;
    filter: grayscale(75%);
    z-index: 0;
  }
  
  .da-in span:hover .avatar {
    scale: 1.5;
  }
  
  .avatar {
    transition: all .3s ease-out;
    position: relative;
  }
  
  /* Inner card container and UI */
  .da-in {
    --angle: 0deg;
    display: flex;
    flex-flow: column nowrap;
    place-items: center;
    padding: 1em;
    margin: 0 .75em;
    color: rgba(var(--cardText), 1);
    background-color: rgb(158, 187, 214);
    transition: all .5s ease-out;
    animation: animateBorder 10s linear infinite reverse;
    border: .15em solid;
    position: relative;
    z-index: 10;
    border-image: linear-gradient(var(--angle), rgba(var(--cardbg), 1),  rgba(41, 41, 95, .5), rgba(var(--cardbg), 1)) 1;
  }
  
  .da-in p {
    color: rgba(var(--cardText), 1);
    line-height: 1.25em;
    display: -webkit-box;
    -webkit-box-orient: vertical;
    overflow: hidden;
    text-overflow: ellipsis;
    -webkit-line-clamp: 3;
    font-size: 1em;
    margin: 1em 0;
    transition: all .3s ease-out .3s;
  }
  
  .da-in .b {
    display: block;
    padding: 8px 16px;
    background-color:  rgba(41, 41, 95, .35);
    color: rgba(var(--cardTextBtn), .75);
    text-decoration: none;
    border-radius: 4px;
    font-size: .85em;
    transition: all 0.3s ease-in-out;
  }


  .da-in.b:hover {
    cursor: pointer;
    background-color: rgba(var(--cardsquares), .35);
  }
  
  .da-in.b:active {
    box-shadow: inset 0px -2px 3px  rgba(41, 41, 95, .25);
  }
  
  /* Card links container */
  .da-li {
    transition: all .3s linear;
    opacity: 0;
    display: flex;
    flex-flow: row wrap;
    gap: 1em;
    position: relative;
    top: -2rem;
    list-style: none;
    color: rgba(var(--cardText), 1);
    font-size: .75em
  }
  
  .da-li a {
    transition: color .3s ease-out ;
  

    
  }

  
  .da-li a:hover {
    color: rgba(1, 1, 26, 0.75);
  }
  
  /* Card chckbox active state */
  .da input[type="checkbox"] {
    visibility: hidden;
  }
  
  .da:hover:has(#toggle:checked) .da-ti {
    text-shadow: 0px 2px 5px rgba(var(--cardText), .35);
  }
  
  .da:has(#toggle:checked) {
    border-radius: 10px;
    height: 295px;
  }
  
  .da:has(#toge:checked) .da-in > *:not(.b):not(span) {
    opacity: 0;
  }
  
  .da:has(#toge:checked) .da-in {
    translate: 0 -20%;
    border-width: 1px;
    border: none;
    box-shadow: inset 0 0 5px rgba(41, 41, 95, .5),
    inset 0px 0px 2px rgba(41, 41, 95, .25),
    inset 0px 30px 40px rgba(41, 41, 95, .25);
    border-radius: 10px;
  }
  
  .da:has(#toge:checked) .da-in span {
    translate: 0 75%;
  }
  
  .da:has(#toge:checked) .da-in p {
    transition: all .1s ease-out;
  }
  
  .da:has(#toge:checked) .da-li {
    opacity: 1;
    top: -2rem;
  }
  
  .da #toge {
    visibility: hidden;
  }
  
  @keyframes animateBorder {
    to {
      --angle: 360deg;
    }
  }
  
  @property --angle {
    syntax: '<angle>';
    initial-value: 0deg;
    inherits: false;
  }
  
  
 /*jjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjj*/
  
 .sa {
    --cardbg: 245, 245, 245;
    --cardBase: 235, 16, 206;
    --cardText: 100, 100, 100;
    --cardTextBtn: 106, 16, 88;
    --cardsquares: 156, 113, 227;
    display: flex;
    flex-flow: column nowrap;
    place-items: center;
    text-align: center;
    border: 1px solid rgb(40, 124, 89);
    box-shadow: 0 0 3em  rgba(255, 3, 154, 0.25),
    inset 0 -.25em 1px rgba(0,0,255 .125);
    border-radius: 4px;
    background: rgba(var(--cardbg), 1);
    position: relative;
    width: 270px;
    height: 360px;
    perspective: 1000px;
    z-index: 0;
    transition: all 1s ease-out;
   
    top: 150px;
    left: -250px;
  }
  
  .sa:hover {
    filter: grayscale(0%);
    scale: 1.025;
    box-shadow: 0 0 5em  rgba(255, 3, 154, 0.5);
  }
  
  .sa::after,
  .sa::before {
    content: '';
    width: 200px;
    height: 50%;
    display: block;
    background-color: rgba(var(--cardsquares), .5);
    filter: blur(10px);
    position: absolute;
    transition: all 5s ease-out;
    opacity: .1;
    z-index: 0;
  }
  
  .sa:hover::after,
  .sa:hover::before {
    opacity: .5;
    rotate: 60deg;
  }
  
  .sa:hover::after {
    translate: 100% 0;
  }
  
  .sa:hover::before {
    translate: -100% 0;
  }
  
  .sa.sa-ti {
    color: rgba(var(--cardText), .75);
    font-size: 1.1em;
    font-weight: 600;
    margin: .5em;
    position: relative;
    transition: all .3s ease-out;
    z-index: 100;
    text-shadow: 0px 0px 0px rgba(var(--cardText), .25);
  }
  
  .sa:hover h3 {
    color: rgba(var(--cardText), 1);
    text-shadow: 0px 8px 5px rgba(var(--cardText), .35);
  }
  
  .sa:hover span {
    filter: grayscale(0%);
  }
  
  /* Inner card */
  .sa-in::after {
    left: -6rem;
    bottom: 0;
  }
  
  .sa-in::before {
    right: -6rem;
    top: 1rem;
  }
  
  /* Avatar container */
  .sa-in span {
    color: rgba(41, 41, 95, 1);
    display: flex;
    place-items: center;
    text-align: center;
    border-radius: 50%;
    overflow: hidden;
    background-color:  rgba(41, 41, 95, .5);
    height: 80px;
    width: 50%;
    box-shadow: inset 0px 2px 4px  rgba(255, 3, 154, .95),
    inset 0px 2px 40px rgba(var(--cardbg), .95);
    position: relative;
    transition: all .3s ease-out .1s;
    filter: grayscale(75%);
    z-index: 0;
  }
  
  .sa-in span:hover .avatar {
    scale: 1.5;
  }
  
  .avatar {
    transition: all .3s ease-out;
    position: relative;
  }
  
  /* Inner card container and UI */
  .sa-in {
    --angle: 0deg;
    display: flex;
    flex-flow: column nowrap;
    place-items: center;
    padding: 1em;
    margin: 0 .75em;
    color: rgba(var(--cardText), 1);
    background-color: rgb(158, 187, 214);
    transition: all .5s ease-out;
    animation: animateBorder 10s linear infinite reverse;
    border: .15em solid;
    position: relative;
    z-index: 10;
    border-image: linear-gradient(var(--angle), rgba(var(--cardbg), 1),  rgba(155, 43, 71, 0.5) , rgba(var(--cardbg), 1)) 1;
  }
  
  .sa-in p {
    color: rgba(var(--cardText), 1);
    line-height: 1.25em;
    display: -webkit-box;
    -webkit-box-orient: vertical;
    overflow: hidden;
    text-overflow: ellipsis;
    -webkit-line-clamp: 3;
    font-size: 1em;
    margin: 1em 0;
    transition: all .3s ease-out .3s;
  }
  
  /*ارجعييييييييييييييي*/.sa-in .o {
    display: block;
    padding: 8px 16px;
    background-color:   rgba(41, 41, 95, 0.555);
    color: rgba(var(--cardTextBtn), .75);
    text-decoration: none;
    border-radius: 4px;
    font-size: .85em;
    transition: all 0.3s ease-in-out;
  }


  .sa-in.o:hover {
    cursor: pointer;
    background-color: rgba(var(--cardsquares), .35);
  }
  
  .sa-in.o:active {
    box-shadow: inset 0px -2px 3px  rgba(41, 41, 95, .25);
  }
  
  /* Card links container */
  .sa-li {
    transition: all .3s linear;
    opacity: 0;
    display: flex;
    flex-flow: row wrap;
    gap: 1em;
    position: relative;
    top: -2rem;
    list-style: none;
    color: rgba(var(--cardText), 1);
    font-size: .75em
  }
  
  .sa-li a {
    transition: color .3s ease-out ;
  

    
  }

  
  .sa-li a:hover {
    color: rgba(1, 1, 26, 0.75);
  }
  
  /* Card chckbox active state */
  .sa input[type="checkbox"] {
    visibility: hidden;
  }
  
  .sa:hover:has(#to:checked) .sa-ti {
    text-shadow: 0px 2px 5px rgba(var(--cardText), .35);
  }
  
  .sa:has(#to:checked) {
    border-radius: 10px;
    height: 295px;
  }
  
  .sa:has(#to:checked) .sa-in > *:not(.o):not(span) {
    opacity: 0;
  }
  
  .sa:has(#to:checked) .sa-in {
    translate: 0 -20%;
    border-width: 1px;
    border: none;
    box-shadow: inset 0 0 5px  rgba(255, 3, 154, .5),
    inset 0px 0px 2px  rgba(255, 3, 154, .25),
    inset 0px 30px 40px  rgba(255, 3, 154, .25);
    border-radius: 10px;
  }
  
  .sa:has(#to:checked) .sa-in span {
    translate: 0 75%;
  }
  
  .sa:has(#to:checked) .sa-in p {
    transition: all .1s ease-out;
  }
  
 .sa:has(#to:checked) .sa-li {
    opacity: 1;
    top: -2rem;
  }
  
  .sa #to {
    visibility: hidden;
  }
  
  @keyframes animateBorder {
    to {
      --angle: 360deg;
    }
  }
  
  @property --angle {
    syntax: '<angle>';
    initial-value: 0deg;
    inherits: false;
  }
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  /*الى في الوكالة  واسما~هم*/
  
  
  .button {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    padding: 15px 100px;
    border: 0;
    position: relative;
    overflow: hidden;
    border-radius: 300rem;
    transition: all 0.02s;
    font-weight: bold;
    color: rgb(22, 18, 18);
    z-index: 0;
    box-shadow: 0 0px 7px -5px rgba(237, 235, 243, 0.5);
    left: 150px;
    top: -200px;
    font-size: 30px;
  }
  
  .button:hover {
    background: rgb(193, 228, 248);
    color: rgb(33, 0, 85);
  }
  
  .button:active {
    transform: scale(0.97);
  }
  
  .hoverEffect {
    position: absolute;
    bottom: 0;
    top: 0;
    left: 0;
    right: 0;
    display: flex;
    align-items: center;
    justify-content: center;
    z-index: 1;
  }
  
  .hoverEffect div {
    background: rgb(46, 134, 61);
    background: linear-gradient(90deg, rgb(177, 92, 35) 0%, rgb(175, 116, 48)45%, rgba(0,212,255,1) 100%);
    border-radius: 40rem;
    width: 40rem;
    height: 40rem;
    transition: 0.4s;
    filter: blur(20px);
    animation: effect infinite 4s linear;
    opacity: 0.5;
  }
  
  .button:hover .hoverEffect div {
    width: 8rem;
    height: 8rem;
  }
  
  @keyframes effect {
  
    0% {
      transform: rotate(0deg);
    }
  
    100% {
      transform: rotate(360deg);
    }
  }